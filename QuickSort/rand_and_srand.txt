C++中随机函数rand()和srand()的用法
1.rand()
所在头文件:stdlib.h
函数说明:
	rand()的内部实现是用线性同余法做的,它不是真的随机数,因其周期特别长,故在一定范围里可看成是随即的.
	rand()返回一随机数值的范围在0~RAND_MAX间.RAND_MAX的范围最少是在32767之间(int).用unsigned int 双字节是65535,四字节是4294967295的整数范围.
	用户为设定随机数种子时,系统默认的随机数种子为1.
	rand()产生的是伪随机数字,每次执行时是相同的;若要不同,用函数srand()初始化它.

2.srand()
所在头文件:stdlib.h
用法:void srand(unsigned int seed);
函数说明:
	srand()用来设置rand()产生随机数时的随机数种子.
	参数seed必须是整数,通常可以用time(0)的返回值或NULL来当做seed.
	若每次seed都设相同值,rand()所产生的随机数值每次就会一样.

3.relationship
rand()和srand()要一起使用,srand初始化随机数种子,rand产生随机数. (默认情况下随机数种子是1)

4.scope/range
随机整数:
	[a,b) , (rand()%(b-a))+a
	[a,b] , (rand()%(b-a+1))+a
	(a,b] , (rand()%(b-a))+a+1
	通用公式: a+rand()%n;a为起始值,n为整数范围
	要取得a~b之间的随机整数另一种表示: a+(int)b*rand()/(RAND_MAX+1)
	要取得0~1之间的浮点数,可以使用rand()/double(RAND_MAX)

5.产生相同随机数的原因
计算机的随机数都是由伪随机数,即是由小M多项式序列生成的,其中产生每个小序列都有一个初始值,即随机种子.小M多项式序列的周期是65535,即每次利用一个随机种子生成的随机数的周期是65535,当你取得65535个随机数后它们又重复出现了.

6.初始化随机数种子的方法
在开始产生随机数前,调用一次srand(time(0)) 或 srand(time(NULL)) . srand()一定要放在循环外面或者是循环调用的外面.

from: blog.csdn.net/peixuan197/article/details/48084843
